name: CI
on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]
env:
  POSTGRESQL_VERSION: 13.1
  POSTGRESQL_DB: postgres
  POSTGRESQL_USER: root
  POSTGRESQL_PASSWORD: root
jobs:
  CI:
    name: Quality Check
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13.1
        env:
          POSTGRES_DB: ${{ env.POSTGRESQL_DB }}
          POSTGRES_USER: ${{ env.POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Compile
        id: compile
        run: ./gradlew classes
      - name: Unit tests
        id: test
        run: ./gradlew test
      - name: Package Jar
        id: packageJar
        run: ./gradlew jar
      - name: Integration Tests
        id: integrationTest
        run: ./gradlew -PspringProfiles=dev integrationTest
      - name: Build
        id: gradle
        run: ./gradlew build
      - name: "Sonar Analysis"
        id: sonar
        run: ./gradlew -PSONAR_LOGIN=${{ secrets.SONAR_TOKEN }} -PSONAR_PROJECTKEY=${{ secrets.SONAR_PROJECTKEY }} -PSONAR_ORGANIZATION=${{ secrets.SONAR_ORGANIZATION }} -PSONAR_HOST_URL=${{ secrets.SONAR_HOST_URL }} sonar
      - name: "PR Comment (Failure)"
        uses: actions/github-script@v5
        if: github.event_name == 'pull_request' && failure() && steps.gradle.outputs.exit_code == 0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ ${{ github.workflow }} failed'
            })
      - name: "PR Comment (Success)"
        uses: actions/github-script@v5
        if: github.event_name == 'pull_request' && success() && steps.gradle.outputs.exit_code == 0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ ${{ github.workflow }} Succeeded'
            })
